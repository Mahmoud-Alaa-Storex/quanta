<?php
require_once('wiki.hook.inc');

/**
 * Transform wiki tags in html.
 */
function wikize($env, &$page) {
  $nw = array();
  $nwid = 0;

  preg_match_all("/\[(.*?)]/", $page->html, $matches);
  foreach ($matches[1] as $tag_value) {
    $replace = '[' . $tag_value . ']';
    $tag = explode(':', $tag_value);
    $tag_arr = explode('|', $tag[0]);
    $tag_name = $tag_arr[0];
    $attributes = explode('|', $tag[0]);
    $attr_arr = array();
    unset($attributes[0]);
    // Assign attributes as specified in the tag.
    foreach ($attributes as $attr_item) {
      $split = explode('=', $attr_item);
      if (isset($split[1])) {
        $attr_arr[$split[0]] = $split[1];
      } else {
        $attr_arr[$split[0]] = TRUE;
      }
    }

    preg_match_all("/\<nowiki\>(.*)\<\/nowiki\>/is", $page->html, $nowiki);
    foreach ($nowiki[0] as $k => $v) {
      $nwid++;
      $nw[$nwid] = $nowiki[0][$k];
      $page->html = str_replace($nowiki[0][$k], '{nw:' . $nwid . '}', $page->html);
    }

    if ($tag_name == strtoupper($tag_name) && function_exists('wiki_' . $tag_name)) {
      $func = 'wiki_' . $tag_name;
      $page->html = $func($replace, $attr_arr, isset($tag[1]) ? $tag[1] : NULL, $page->html, $page);
    }
  }

  // Render node links.
  preg_match_all("/\[(.+?):(.*?)\]/s", $page->html, $matches);
  foreach ($matches[1] as $k => $match) {
    $node = new Node($env, $match);
    if ($node->exists) {
      $page->html = str_replace($matches[0][$k], '<a class="internal" href="/' . $match . '">' . $matches[2][$k] . '</a>', $page->html);
    }
  }

  // Render page breaks.
  $page->html = preg_replace('/\-\-\-/', '<div class="page-break">&nbsp;</div>', $page->html);

  foreach ($nw as $k => $v) {
    $page->html = str_replace('{nw:' . $k . '}', $nw[$k], $page->html);
  }

  return $page->html;
}
